# Store the parser files generated by JavaCC
JAVACC_OUTDIR = myparser
JAVACC_FILE = Asgn2.jj
PARSER = $(JAVACC_OUTDIR)/MiniJavaParser.java

JAVAC_OPTIONS = -Xlint:unchecked

# AST and Visitor source files
AST = $(wildcard syntaxtree/*.java)
VISITOR = $(wildcard visitor/*.java)

# AST and Visitor class files
AST_CLASS = $(AST:.java=.class)
VISITOR_CLASS = $(VISITOR:.java=.class)



all: Main1.class Main2.class Main3.class

Main1.class: Main1.java $(PARSER) 

Main2.class: Main2.java $(PARSER) 

Main3.class: Main3.java $(PARSER) 

%.class: %.java
	javac $(JAVAC_OPTIONS) $<

$(PARSER): $(JAVACC_FILE) 
	# Create the directory if it does not exist
	mkdir -p $(JAVACC_OUTDIR)
	javacc -OUTPUT_DIRECTORY="$(JAVACC_OUTDIR)" $(JAVACC_FILE)
	javac $(JAVAC_OPTIONS) $(JAVACC_OUTDIR)/*.java

clean:
	rm -rf $(JAVACC_OUTDIR) *.class
	rm -f syntaxtree/*.class visitor/*.class input/*.class input/task12only/*.class input/*_java.java input/task12only/*_java.java

test1:
	java Main1 < input/BinarySearch.java
	java Main1 < input/BinaryTree.java
	java Main1 < input/BubbleSort.java
	java Main1 < input/Factorial.java
	java Main1 < input/LinearSearch.java
	java Main1 < input/LinkedList.java
	java Main1 < input/QuickSort.java
	java Main1 < input/TreeVisitor.java
	java Main1 < input/IntegerLiteral.java
	java Main1 < input/FactorialOneLine.java
	java Main1 < input/General.java
	java Main1 < input/Power.java
	java Main1 < input/For.java
	java Main1 < input/NewOperator.java
	java Main1 < input/task12only/PrecedenceAssociativity.java
	java Main1 < input/task12only/ErrorRecovery.java
	java Main1 < input/task12only/FailErrorRecovery.java

test2:
	java Main2 < input/BinarySearch.java
	java Main2 < input/BinaryTree.java
	java Main2 < input/BubbleSort.java
	java Main2 < input/Factorial.java
	java Main2 < input/LinearSearch.java
	java Main2 < input/LinkedList.java
	java Main2 < input/QuickSort.java
	java Main2 < input/TreeVisitor.java
	java Main2 < input/IntegerLiteral.java
	java Main2 < input/FactorialOneLine.java
	java Main2 < input/General.java
	java Main2 < input/Power.java
	java Main2 < input/For.java
	java Main2 < input/NewOperator.java
	java Main2 < input/task12only/PrecedenceAssociativity.java
	java Main2 < input/task12only/ErrorRecovery.java
	java Main2 < input/task12only/FailErrorRecovery.java

test3:
	java Main3 < input/BinarySearch.java > input/BinarySearch_java.java
	cat input/BinarySearch_java.java
	javac $(JAVAC_OPTIONS) input/BinarySearch_java.java
	java -cp input/ BinarySearch
	java Main3 < input/BinaryTree.java > input/BinaryTree_java.java
	cat input/BinaryTree_java.java
	javac $(JAVAC_OPTIONS) input/BinaryTree_java.java
	java -cp input/ BinaryTree
	java Main3 < input/BubbleSort.java > input/BubbleSort_java.java
	cat input/BubbleSort_java.java
	javac $(JAVAC_OPTIONS) input/BubbleSort_java.java
	java -cp input/ BubbleSort
	java Main3 < input/Factorial.java > input/Factorial_java.java
	cat input/Factorial_java.java
	javac $(JAVAC_OPTIONS) input/Factorial_java.java
	java -cp input/ Factorial
	java Main3 < input/LinearSearch.java > input/LinearSearch_java.java
	cat input/LinearSearch_java.java
	javac $(JAVAC_OPTIONS) input/LinearSearch_java.java
	java -cp input/ LinearSearch
	java Main3 < input/LinkedList.java > input/LinkedList_java.java
	cat input/LinkedList_java.java
	javac $(JAVAC_OPTIONS) input/LinkedList_java.java
	java -cp input/ LinkedList
	java Main3 < input/QuickSort.java > input/QuickSort_java.java
	cat input/QuickSort_java.java
	javac $(JAVAC_OPTIONS) input/QuickSort_java.java
	java -cp input/ QuickSort
	java Main3 < input/TreeVisitor.java > input/TreeVisitor_java.java
	cat input/TreeVisitor_java.java
	javac $(JAVAC_OPTIONS) input/TreeVisitor_java.java
	java -cp input/ TreeVisitor
	java Main3 < input/IntegerLiteral.java > input/IntegerLiteral_java.java
	cat input/IntegerLiteral_java.java
	javac $(JAVAC_OPTIONS) input/IntegerLiteral_java.java
	java -cp input/ IntegerLiteral
	java Main3 < input/FactorialOneLine.java > input/FactorialOneLine_java.java
	cat input/FactorialOneLine_java.java
	javac $(JAVAC_OPTIONS) input/FactorialOneLine_java.java
	java -cp input/ FactorialOneLine
	java Main3 < input/General.java > input/General_java.java
	cat input/General_java.java
	javac $(JAVAC_OPTIONS) input/General_java.java
	java -cp input/ General
	java Main3 < input/Power.java > input/Power_java.java
	cat input/Power_java.java
	javac $(JAVAC_OPTIONS) input/Power_java.java
	java -cp input/ Power
	java Main3 < input/For.java > input/For_java.java
	cat input/For_java.java
	javac $(JAVAC_OPTIONS) input/For_java.java
	java -cp input/ For
	java Main3 < input/NewOperator.java > input/NewOperator_java.java
	cat input/NewOperator_java.java
	javac $(JAVAC_OPTIONS) input/NewOperator_java.java
	java -cp input/ NewOperator

